@{
	Layout = "_DashBoard";
	ViewBag.title = "Subscription management";
	ViewBag.cardTitle = "Edit Subscriptions";
}
@model SubscriptionViewModel;


<section class="Edit-Subscription">
	<div class="container">
		<form method="post">
			
			<div class="form-group">
				<label asp-for="Subscription.SubscriptionName">Subscription Name</label>
				<input readonly type="text" asp-for="Subscription.SubscriptionName" class="form-control" />
				
			</div>

			<div class="form-group">
				<label asp-for="Subscription.Price">Subscription Price</label>
				<input readonly type="number" asp-for="Subscription.Price" class="form-control" />
				
			</div>



			<div class="form-group">
				<label asp-for="Subscription.DurationDays">Subscription DurationDays</label>
				<input readonly type="number" asp-for="Subscription.DurationDays" class="form-control" />
	
			</div>


		

			<div class="bg-dark" id="Benefits" style="padding:30px">
				<div style="text-align:center">
					 Benefits

				</div>


				@for (int i = 0; i < Model.BenefitIDs.Count; i++)
				{
					List<SelectListItem> benfits = Model.Benefits.ToList();
					<div class="form-group">
						<label for="BenefitIDs[@i]">Benefit @(i + 1)</label>
						<div style="display:flex;justify-content:center">

							<select disabled id="BenefitIDs[@i]" name="BenefitIDs[@i]" class="form-control">
								<option  value="0">-- Select jobs</option>

								@for (int j = 0; j < benfits.Count; j++)
								{
									if (Model.BenefitIDs[i].ToString() == benfits[j].Value)
									{
										<option selected value="@benfits[j].Value">@benfits[j].Text</option>

									}
									else
									{
										<option value="@benfits[j].Value">@benfits[j].Text</option>

									}
								}

							</select>

						</div>
					</div>
				}




			</div>
	


		</form>

	</div>
</section>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<script src="~/js/Subscription.js"></script>
	<script>
		start(@Model.BenefitIDs.Count);

	</script>
}
