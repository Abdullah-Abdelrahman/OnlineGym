@{
    Layout = "_DashBoard";
}
@model ClientSubscription
<link rel="stylesheet" href="~/Client/Customer.css">

<div class="container" style="display:flex;flex-wrap:wrap;justify-content: space-between;flex-direction:column">

    @{

        if(Model != null)
        {
            


            <div class="card" style="position:relative;width:100%;height:100%;border-radius:10px;background-image:url(/GymImages/SubscriptionImages/Subscription_1.jpg)">


                <div class="card-body" style="">
                    <p class="card-text" style="font-size:2rem;font-weight:bold;color:goldenrod;margin:0px;"> @Model?.Subscription?.SubscriptionName</p>

                </div>

                <p style="text-align:end;margin:0px;position:absolute;right:5%;top:10%;font-size:1.5rem;color:white">Order Date : @Model.orderDate.ToString()</p>

            
            </div>

            
           
            <h3 style="text-align:center">Start Date : @Model.ClientSubscriptionDetails.StartDate</h3>
            
           
                DateTime d1 = DateTime.Now;
                DateTime d2 = Model.ClientSubscriptionDetails.EndDate.Value;
                int daysLeft = (int)( d2- d1).TotalDays +1;


            <input type="hidden" id="daysPased" value="@(28 - daysLeft)" />

            <div style="display:flex;justify-content:center">

                <div class="Progress">

                    <div class="outer">
                        <div class="inner">

                            <div id="number">
                                @(28 - daysLeft)/28
                            </div>
                        </div>
                    </div>
                    <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="160px" height="160px">
                        <defs>
                            <linearGradient id="GradientColor">
                                <stop offset="0%" stop-color="#DA22FF" />
                                <stop offset="100%" stop-color="#9733EE" />
                            </linearGradient>
                        </defs>
                        <circle id="circle" cx="80" cy="80" r="70" stroke-linecap="round" />
                    </svg>

                </div>





            </div>

            




        }
        else
        {
         <p>You have No Working Plan</p>   
        }



       
    }

</div>

@section Scripts {



    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="/Client/Customer.js"></script>

}
